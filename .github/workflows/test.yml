name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript - Server
        run: npm run build

      - name: Build TypeScript - SDK
        run: npm run build:sdk

      - name: Test - Server (Unit & Integration)
        run: npm run test:server
        continue-on-error: false

      - name: Test - SDK Client
        run: npm run test:sdk
        continue-on-error: false

      - name: Test - End-to-End (with Redis)
        run: REDIS_RUNNING=1 npm run test:e2e
        env:
          REDIS_URL: redis://localhost:6379
        continue-on-error: false

      - name: Generate coverage report
        run: npm run test:coverage

      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30
